@page "/Account/RegisterConfirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using TrustWaveCarca.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Register confirmation</PageTitle>

<h1>Register confirmation</h1>

<StatusMessage Message="@statusMessage" />

@if (emailConfirmationLink is not null)
{
    <p>
        This app does not currently have a real email sender registered, see <a href="https://aka.ms/aspaccountconf">these docs</a> for how to configure a real email sender.
        Normally this would be emailed: <a href="@emailConfirmationLink">Click here to confirm your account</a>
    </p>
}
else
{
    <p>Please check your email to confirm your account.</p>
    <div class="container text-center">
        <div style="margin-top: 20px;">
            <p style="margin-bottom: 10px;">You can confirm your account using your preferred email service:</p>
            <ul style="list-style-type: none; padding: 0;">
                <li style="display: inline-block; margin-right: 10px;">
                    <a href="https://mail.google.com" target="_blank" style="text-decoration: none;">
                        <img src="Icons/gmail.png" alt="Gmail Icon" style="width: 32px; height: 32px; border-radius: 5px;">
                        <span style="display: block; font-size: 14px; margin-top: 5px;">Gmail</span>
                    </a>
                </li>
                <li style="display: inline-block; margin-right: 10px;">
                    <a href="https://outlook.office.com" target="_blank" style="text-decoration: none;">
                        <img src="Icons/outlook.png" alt="Outlook Icon" style="width: 32px; height: 32px; border-radius: 5px;">
                        <span style="display: block; font-size: 14px; margin-top: 5px;">Outlook</span>
                    </a>
                </li>
                <li style="display: inline-block;">
                    <a href="https://www.yahoo.com/" target="_blank" style="text-decoration: none;">
                        <img src="Icons/yahoo.png" alt="Yahoo Icon" style="width: 32px; height: 32px; border-radius: 5px;">
                        <span style="display: block; font-size: 14px; margin-top: 5px;">Yahoo Mail</span>
                    </a>
                </li>
            </ul>
            <p style="margin-top: 20px; font-size: 14px; color: #333;">Didn't receive the email? Check your spam folder..!!</p>
        </div>
    </div>
}

@code {
    private string? emailConfirmationLink;
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error finding user for unspecified email";
        }
        else if (EmailSender is IdentityNoOpEmailSender)
        {
            // Once you add a real email sender, you should remove this code that lets you confirm the account
            var userId = await UserManager.GetUserIdAsync(user);
            var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
                new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
        }
    }
}
