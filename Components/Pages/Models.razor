@page "/add-tether-wallet"
@inject IJSRuntime JS
@rendermode InteractiveServer
<!-- Button to trigger modal -->
<button type="button" class="btn btn-primary" @onclick="ShowModal">
    Add Tether Wallet
</button>

<!-- Modal -->
<div class="modal fade" id="addTetherWalletModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Tether Wallet</h5>
                <button type="button" class="btn-close" @onclick="CloseModal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Select Wallet Type</p>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="walletType" id="bep20" @bind="selectedWalletType">
                    <label class="form-check-label" for="bep20">BEP20</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="walletType" id="erc20" @bind="selectedWalletType">
                    <label class="form-check-label" for="erc20">ERC20</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="walletType" id="trc20" @bind="selectedWalletType">
                    <label class="form-check-label" for="trc20">TRC20</label>
                </div>
                <div class="mb-3">
                    <label for="cryptoWalletName" class="form-label">Crypto Wallet Name</label>
                    <input type="text" class="form-control" id="cryptoWalletName" @bind="walletName" placeholder="Enter wallet name">
                </div>
                <div class="mb-3">
                    <label for="cryptoWalletAddress" class="form-label">Crypto Wallet Address</label>
                    <input type="text" class="form-control" id="cryptoWalletAddress" @bind="walletAddress" placeholder="Enter wallet address">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="CloseModal">Close</button>
                <button type="button" class="btn-save" @onclick="SaveWallet">Save</button>
            </div>
        </div>
    </div>
</div>
<style>
    /* Modal Styling */
    .modal-content {
        width: 450px;
        height: 500px;
        border-radius: 10px; /* Rounded corners */
    }

    .modal-header {
        border-bottom: 1px solid #e0e0e0;
    }

    .modal-title {
        font-family: 'Poppins', sans-serif;
        font-size: 18px;
        font-weight: 600;
        line-height: 55px;
        text-align: center;
        color: #000000;
        margin: 0 auto;
        opacity: 0.9;
    }

    /* Form Controls */
    .form-check-input {
        border: 1px solid #e0e0e0;
        border-radius: 5px;
        width: 18px;
        height: 18px;
    }

    .form-check-label {
        font-family: 'Poppins', sans-serif;
        font-size: 14px;
        color: #000;
    }

    /* Input Styling */
    input.form-control {
        border: 1px solid #e0e0e0;
        border-radius: 5px;
        font-family: 'Poppins', sans-serif;
        font-size: 14px;
    }

    /* Save Button */
    .btn-save {
        background-color: #ff4f6d; /* Red color */
        color: white;
        font-weight: 600;
        border-radius: 5px;
        padding: 10px 20px;
    }

        .btn-save:hover {
            background-color: #d74258;
        }

    /* Modal Footer */
    .modal-footer {
        display: flex;
        justify-content: space-between;
    }

    /* Button to close the modal */
    .btn-close {
        background-color: transparent;
        border: none;
    }

    /* Close Button Custom Style */
    .btn-secondary {
        background-color: #f4f4f4;
        border-radius: 5px;
        padding: 10px 15px;
        font-weight: 500;
    }

        .btn-secondary:hover {
            background-color: #e0e0e0;
        }

</style>
@code {
    private string selectedWalletType = "BEP20"; // Default selected wallet type
    private string walletName;
    private string walletAddress;

    // Show the modal by adding 'show' class
    private async Task ShowModal()
    {
        await JS.InvokeVoidAsync("$('#addTetherWalletModal').modal", "show");
    }

    // Hide the modal by removing 'show' class
    private async Task CloseModal()
    {
        await JS.InvokeVoidAsync("$('#addTetherWalletModal').modal", "hide");
    }

    // Handle Save action
    private void SaveWallet()
    {
        // Handle the wallet save logic (e.g., sending to the server)
        Console.WriteLine($"Wallet Type: {selectedWalletType}");
        Console.WriteLine($"Wallet Name: {walletName}");
        Console.WriteLine($"Wallet Address: {walletAddress}");
        CloseModal();
    }
}
