@page "/"

@inject IDbContextFactory<ApplicationDbContext> DbContextFactory
@* @inject UIStateService UIStateService *@
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using Microsoft.IdentityModel.Tokens
@using TrustWaveCarca.Data
@using TrustWaveCarca.Components.Account.Pages.User
@using TrustWaveCarca.Reusable
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject ApplicationDbContext Dbcontext
@inject Partnerchat partnerchat
<PageTitle>Home</PageTitle>

<AuthorizeView>
    <Authorized>
        <div class="text-end mb-4">
            @if (credentials != null)
            {
                <h3>
                    <span class="btnbgcolor text-white p-2 rounded" style="font-size: 1.2rem;">
                        ID: <span class="text-white">@credentials.UniqueLoginID</span>
                    </span>
                </h3>
            }
            else
            {
                <p>No credentials found for this user.</p>
            }
        </div>

        <div class="row">
            <!-- Left Side (Chats) -->
            <div class="col-12 col-md-5 mb-4 mb-md-0">
                <Chatsendrequest />
                <Chatacceptrequest />
            </div>

            <!-- Right Side (Partner Chat) -->
            <div class="col-12 col-md-6 offset-md-1">
                <Partnerchat />
            </div>
        </div>
    </Authorized>

    <NotAuthorized>
        <div class="d-flex flex-column justify-content-center align-items-center min-vh-50 bg-light p-4">
            <h3 class="text-center bgcolor text-white py-3 px-4 rounded-3 shadow-sm mb-4" style="font-size: 2rem;">
                Welcome to TrustwaveCarca!
            </h3>

            <p class="mb-3 text-center text-muted" style="font-size: 1rem;">
                Don’t have an account?
                <a href="@RegisterPath" class="btn btn-link text-success fw-bold">
                    Register
                </a>
            </p>

            <p class="text-center text-muted" style="font-size: 1rem;">
                Already a member?
                <a href="@LoginPath" class="btn btn-sm btnbgcolor" style="font-weight: bold; text-decoration: none;">
                    Login
                </a>
                to access your account.
            </p>
        </div>
    </NotAuthorized>
</AuthorizeView>



@code {
    private string LoginPath => NavigationManager.ToAbsoluteUri("/Account/Login").ToString();
    private string RegisterPath => NavigationManager.ToAbsoluteUri("/Account/Register").ToString();
    private UserLoginCredentials? credentials { get; set; }
    private string? currentuser { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {

            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var userName = authState.User;
            currentuser = userName.Identity?.Name;

            if (string.IsNullOrEmpty(currentuser))
            {
                Console.WriteLine("No user is authenticated.");
                return;
            }

            // Create a new DbContext instance
            await using var dbContext = DbContextFactory.CreateDbContext();

            credentials = await dbContext.UserLoginCredentials
                                          .FirstOrDefaultAsync(e => e.Email == currentuser);

            if (credentials == null)
            {
                Console.WriteLine($"No credentials found for user: {currentuser}");
            }
           // UIStateService.OnStateChange += StateHasChanged;

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during initialization: {ex.Message}");
        }
    }
    // public void Dispose()
    // {
    //     UIStateService.OnStateChange -= StateHasChanged;
    // }
}
